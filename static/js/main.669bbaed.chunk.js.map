{"version":3,"sources":["components/weather/weatherCard.js","components/weather/temp.js","App.js","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","alert","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.669bbaed.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\n\nexport default function WeatherCard(tempInfo) {\n\n    const [weatherState, setWeatherState] = useState(\"\");\n\n    const {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset,\n    } = tempInfo.tempInfo;\n\n    useEffect(() => {\n        if (weathermood) {\n          switch (weathermood) {\n            case \"Clouds\":\n              setWeatherState(\"wi-day-cloudy\");\n              break;\n            case \"Haze\":\n              setWeatherState(\"wi-fog\");\n              break;\n            case \"Clear\":\n              setWeatherState(\"wi-day-sunny\");\n              break;\n            case \"Mist\":\n              setWeatherState(\"wi-dust\");\n              break;\n    \n            default:\n              setWeatherState(\"wi-day-sunny\");\n              break;\n          }\n        }\n      }, [weathermood]);\n\n    let sec = sunset;\n    let date = new Date(sec*1000);\n    let timeStr = `${date. getHours()}:${date.getMinutes()}`\n\n    return (\n        <>\n            <article className=\"widget\">\n                <div className=\"weatherIcon\">\n                    <i className={`wi ${weatherState}`}></i>\n                </div>\n                <div className=\"weatherInfo\">\n                    <div className=\"temperature\">\n                        <span>{temp}&deg;</span>\n                    </div>\n                    <div className=\"description\">\n                        <div className=\"weatherCondition\">{weathermood}</div>\n                        <div className=\"place\">{name}, {country}</div>\n                    </div>\n                </div>\n                <div className=\"date\">{new Date().toLocaleString()}</div>\n\n                <div className=\"extra-temp\">\n                    <div className=\"temp-info-minmax\">\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-sunset\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {timeStr} PM<br />\n                                Sunset\n                            </p>\n                        </div>\n\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-humidity\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {humidity}<br />\n                                Humidity\n                            </p>\n                        </div>\n\n                    </div>\n\n                    <div className=\"weather-extra-info\">\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-rain\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {pressure}<br />\n                                Pressure\n                            </p>\n                        </div>\n\n                        <div className=\"two-sided-section\">\n                            <p>\n                                <i className={\"wi wi-strong-wind\"}></i>\n                            </p>\n                            <p className=\"extra-info-leftside\">\n                                {speed}<br />\n                                Speed\n                            </p>\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n            </article>\n        </>\n    );\n};\n","import React, { useState, useEffect } from 'react'\nimport \"./style.css\"\nimport WeatherCard from './weatherCard';\n\nexport default function Temp() {\n\n    const [searchValue, setSearchValue] = useState(\"Ranchi\");\n    const [tempInfo, setTempInfo] = useState({});\n\n    const getWeatherInfo = async () => {\n        try {\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=55ac564a4fd444e8ad5a03ad63bee16d`;\n            const res = await fetch(url);\n            const data = await res.json();\n            const { temp, humidity, pressure } = data.main;\n            const { main: weathermood } = data.weather[0];\n            const { name } = data;\n            const { speed } = data.wind;\n            const {country,sunset} = data.sys;\n\n            const myNewWeatherInfo = {\n                temp,\n                humidity,\n                pressure,\n                weathermood,\n                name,\n                speed,\n                country,\n                sunset,\n              };\n              setTempInfo(myNewWeatherInfo);    \n        }\n        catch (error) {\n            alert(\"City not found\");\n        }\n    }\n\n    useEffect(() => {\n        getWeatherInfo();\n    }, [])\n\n    return (\n        <>\n            <div className=\"wrap\">\n                <div className=\"search\">\n                    <input type=\"search\" placeholder=\"Search...\" autoFocus id=\"search\" className=\"searchTerm\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\n                    <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>Search</button>\n                </div>\n            </div>\n            <WeatherCard tempInfo={tempInfo}/>\n        </>\n\n    )\n}\n","import React from 'react'\nimport Temp from './components/weather/temp'\n\nexport default function App() {\n  return (\n    <div>\n     <Temp/>\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}